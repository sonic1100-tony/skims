apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  namespace: istio-system
  name: istiooperator
spec:
  profile: default
  components:
    ingressGateways:
    - name: istio-ingressgateway
      namespace: istio-system
      enabled: false
      label:
        istio: ingressgateway
      k8s:
        serviceAnnotations:
          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
          service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    - name: core-istio-ingressgateway
      namespace: gateway
      enabled: true
      label: 
        istio: core-istio-ingressgateway
      k8s:
        serviceAnnotations:
          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
          service.beta.kubernetes.io/aws-load-balancer-internal: "true"
          sidecar.istio.io/inject: "true"
        #  external-dns.alpha.kubernetes.io/hostname: eks-kui-ncrm.klsdev.kakaoinsure.net
        hpaSpec:
          minReplicas: 2
        nodeSelector:
          eks.amazonaws.com/nodegroup: sk-dev-eks-core-worker-node
        service:
          ports:
          - name: status-port
            port: 15021
            targetPort: 15021
          - name: http2
            port: 80
            targetPort: 8080
          - name: https
            port: 443
            targetPort: 8443   
#         hostname: aa2a9739489564f75bbccb1f8c90e206-aaed5ed860ae4cd7.elb.ap-northeast-2.amazonaws.com
              #    - name: common-istio-ingressgateway
              #      namespace: gateway
              #      enabled: true
              #      label:
              #        istio: common-istio-ingressgateway
              #      k8s:
              #        serviceAnnotations:
              #          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
              #          service.beta.kubernetes.io/aws-load-balancer-internal: "true"
              #          sidecar.istio.io/inject: "true"
              #        hpaSpec:
              #          minReplicas: 2
              #        nodeSelector:
              #          eks.amazonaws.com/nodegroup: sk-dev-eks-common-worker-node
              #        service:
              #          ports:
              #          - name: status-port
              #            port: 15021
              #            targetPort: 15021
              #          - name: http2
              #            port: 80
              #            targetPort: 8080
              #          - name: https
              #            port: 443
              #            targetPort: 8443
#         hostname: ac3523f124a804b4088ea8e392ab3a8d-e194c430d09b5e42.elb.ap-northeast-2.amazonaws.com
    - name: devops-istio-ingressgateway
      namespace: gateway
      enabled: true
      label:
        istio: devops-istio-ingressgateway
      k8s:
        serviceAnnotations:
          service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
          service.beta.kubernetes.io/aws-load-balancer-internal: "true"
          sidecar.istio.io/inject: "true"
        hpaSpec:
          minReplicas: 2
        nodeSelector:
          eks.amazonaws.com/nodegroup: sk-dev-eks-devops-worker-node
        service:
          ports:
          - name: status-port
            port: 15021
            targetPort: 15021
          - name: http2
            port: 80
            targetPort: 8080
          - name: https
            port: 443
            targetPort: 8443
#         hostname: a77ed306288364a6dbe4aafbf4120b3b-559b8be912e848f9.elb.ap-northeast-2.amazonaws.com
    pilot: 
      enabled: true
      k8s: 
        hpaSpec:
          minReplicas: 2
  meshConfig:
    enableTracing: true
    defaultConfig:
      #istio-proxy가 완전히 올라오면 서비스 
      holdApplicationUntilProxyStarts: true
    #Envoy PRoxy access Log 설정
    accessLogFile: /dev/stdout
    #오직 ServiceEntry를 통해 허가된 IP/Domain만 outbound 허용 옵션. secure 한 service 운영 가능 
    #default 는 ALLOW_ANY
#   outboundTrafficPolicy:
#     mode: REGISTRY_ONLY
