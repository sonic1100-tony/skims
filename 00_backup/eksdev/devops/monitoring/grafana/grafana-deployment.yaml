kind: Deployment
apiVersion: apps/v1
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/instance: grafana
    app.kubernetes.io/name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: grafana
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: grafana
        app.kubernetes.io/name: grafana
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: grafana
      initContainers:
        - name: init-chown-data
          image: 857616209275.dkr.ecr.ap-northeast-2.amazonaws.com/busybox:1.35.0
          command:
            - chown
            - '-R'
            - '472:472'
            - /var/lib/grafana
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
      containers:
        - name: grafana
          image: grafana/grafana:8.5.6
          ports:
            - name: service
              containerPort: 80
              protocol: TCP
            - name: grafana
              containerPort: 3000
              protocol: TCP
          env:
            - name: GF_SERVER_HTTP_PORT
              value: "3000"
            - name: GF_AUTH_BASIC_ENABLED
              value: "false"
            - name: GF_AUTH_ANONYMOUS_ENABLED
              value: "true"
            - name: GF_AUTH_ANONYMOUS_ORG_ROLE
              value: Admin
            - name: GF_SERVER_ROOT_URL
              value: /
          volumeMounts:
            - name: storage
              mountPath: /var/lib/grafana
          imagePullPolicy: IfNotPresent
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      nodeSelector:
        eks.amazonaws.com/nodegroup: sk-dev-eks-devops-worker-node
      securityContext:
        runAsUser: 472
        runAsGroup: 472
        fsGroup: 472
